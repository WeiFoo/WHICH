\contentsline {chapter}{\numberline {1}Class Index}{1}{chapter.1}
\contentsline {section}{\numberline {1.1}Class List}{1}{section.1.1}
\contentsline {chapter}{\numberline {2}Class Documentation}{3}{chapter.2}
\contentsline {section}{\numberline {2.1}Data Class Reference}{3}{section.2.1}
\contentsline {subsection}{\numberline {2.1.1}Detailed Description}{4}{subsection.2.1.1}
\contentsline {subsection}{\numberline {2.1.2}Constructor \& Destructor Documentation}{4}{subsection.2.1.2}
\contentsline {subsubsection}{\numberline {2.1.2.1}\setlength {\rightskip }{0pt plus 5cm}Data::Data ()}{4}{subsubsection.2.1.2.1}
\contentsline {subsubsection}{\numberline {2.1.2.2}\setlength {\rightskip }{0pt plus 5cm}Data::$\sim $Data ()}{4}{subsubsection.2.1.2.2}
\contentsline {subsection}{\numberline {2.1.3}Member Function Documentation}{4}{subsection.2.1.3}
\contentsline {subsubsection}{\numberline {2.1.3.1}\setlength {\rightskip }{0pt plus 5cm}void Data::read (std::string {\em fName})}{4}{subsubsection.2.1.3.1}
\contentsline {subsubsection}{\numberline {2.1.3.2}\setlength {\rightskip }{0pt plus 5cm}void Data::discretizeEqInt (int {\em bins}, \/ {\bf Data} $\ast $ {\em combine})}{4}{subsubsection.2.1.3.2}
\contentsline {subsubsection}{\numberline {2.1.3.3}\setlength {\rightskip }{0pt plus 5cm}void Data::discretizeEqFreq (int {\em bins}, \/ {\bf Data} $\ast $ {\em combine} = {\tt NULL})}{5}{subsubsection.2.1.3.3}
\contentsline {subsubsection}{\numberline {2.1.3.4}\setlength {\rightskip }{0pt plus 5cm}bool Data::subsample (unsigned int {\em desClass}, \/ float {\em per})}{5}{subsubsection.2.1.3.4}
\contentsline {subsubsection}{\numberline {2.1.3.5}\setlength {\rightskip }{0pt plus 5cm}unsigned int Data::microsample (unsigned int {\em amount})}{5}{subsubsection.2.1.3.5}
\contentsline {subsubsection}{\numberline {2.1.3.6}\setlength {\rightskip }{0pt plus 5cm}void Data::normalizeAttribute (int {\em attIndex})}{5}{subsubsection.2.1.3.6}
\contentsline {subsubsection}{\numberline {2.1.3.7}\setlength {\rightskip }{0pt plus 5cm}{\bf Data} $\ast $ Data::clone ()}{6}{subsubsection.2.1.3.7}
\contentsline {subsubsection}{\numberline {2.1.3.8}\setlength {\rightskip }{0pt plus 5cm}bool Data::cover ({\bf Rule} $\ast $ {\em rule})}{6}{subsubsection.2.1.3.8}
\contentsline {subsubsection}{\numberline {2.1.3.9}\setlength {\rightskip }{0pt plus 5cm}int Data::compareListItems (ListItem {\em l1}, \/ ListItem {\em l2})}{6}{subsubsection.2.1.3.9}
\contentsline {subsubsection}{\numberline {2.1.3.10}\setlength {\rightskip }{0pt plus 5cm}void Data::calcLift ()}{6}{subsubsection.2.1.3.10}
\contentsline {subsubsection}{\numberline {2.1.3.11}\setlength {\rightskip }{0pt plus 5cm}void Data::calcPDPFEst (unsigned int {\em LOC})}{6}{subsubsection.2.1.3.11}
\contentsline {subsubsection}{\numberline {2.1.3.12}\setlength {\rightskip }{0pt plus 5cm}void Data::calcProbSupt ()}{6}{subsubsection.2.1.3.12}
\contentsline {subsubsection}{\numberline {2.1.3.13}\setlength {\rightskip }{0pt plus 5cm}float Data::getLift ()}{7}{subsubsection.2.1.3.13}
\contentsline {subsubsection}{\numberline {2.1.3.14}\setlength {\rightskip }{0pt plus 5cm}int Data::getTotLOC ()}{7}{subsubsection.2.1.3.14}
\contentsline {subsubsection}{\numberline {2.1.3.15}\setlength {\rightskip }{0pt plus 5cm}vector$<$ int $>$ Data::getLOCs ()}{7}{subsubsection.2.1.3.15}
\contentsline {subsubsection}{\numberline {2.1.3.16}\setlength {\rightskip }{0pt plus 5cm}vector$<$ vector$<$ InstanceElement $\ast $ $>$ $\ast $ $>$ Data::getInstanceSet ()}{7}{subsubsection.2.1.3.16}
\contentsline {subsubsection}{\numberline {2.1.3.17}\setlength {\rightskip }{0pt plus 5cm}unsigned int Data::getNumAtts ()}{7}{subsubsection.2.1.3.17}
\contentsline {subsubsection}{\numberline {2.1.3.18}\setlength {\rightskip }{0pt plus 5cm}unsigned int Data::getNumClasses ()}{7}{subsubsection.2.1.3.18}
\contentsline {subsubsection}{\numberline {2.1.3.19}\setlength {\rightskip }{0pt plus 5cm}unsigned int Data::getClassIndex (std::vector$<$ InstanceElement $\ast $ $>$ $\ast $ {\em instance})}{8}{subsubsection.2.1.3.19}
\contentsline {subsubsection}{\numberline {2.1.3.20}\setlength {\rightskip }{0pt plus 5cm}unsigned int Data::getNumAttVals (std::string {\em att})}{8}{subsubsection.2.1.3.20}
\contentsline {subsubsection}{\numberline {2.1.3.21}\setlength {\rightskip }{0pt plus 5cm}string Data::getAttName (int {\em index})}{8}{subsubsection.2.1.3.21}
\contentsline {subsubsection}{\numberline {2.1.3.22}\setlength {\rightskip }{0pt plus 5cm}unsigned int Data::getAttIndex (std::string {\em name})}{8}{subsubsection.2.1.3.22}
\contentsline {subsubsection}{\numberline {2.1.3.23}\setlength {\rightskip }{0pt plus 5cm}unsigned int Data::getAttValIndex (std::string {\em attName}, \/ std::string {\em valName})}{8}{subsubsection.2.1.3.23}
\contentsline {subsubsection}{\numberline {2.1.3.24}\setlength {\rightskip }{0pt plus 5cm}std::string Data::getAttValName (std::string {\em att}, \/ int {\em index})}{9}{subsubsection.2.1.3.24}
\contentsline {subsubsection}{\numberline {2.1.3.25}\setlength {\rightskip }{0pt plus 5cm}string Data::getClassName (int {\em index})}{9}{subsubsection.2.1.3.25}
\contentsline {subsubsection}{\numberline {2.1.3.26}\setlength {\rightskip }{0pt plus 5cm}vector$<$ int $>$ Data::getClassFreqs ()}{9}{subsubsection.2.1.3.26}
\contentsline {subsubsection}{\numberline {2.1.3.27}\setlength {\rightskip }{0pt plus 5cm}const vector$<$ vector$<$ int $\ast $ $>$ $>$ $\ast $ Data::getFrequencyTable ()}{9}{subsubsection.2.1.3.27}
\contentsline {subsubsection}{\numberline {2.1.3.28}\setlength {\rightskip }{0pt plus 5cm}void Data::printAttributes ()}{10}{subsubsection.2.1.3.28}
\contentsline {subsubsection}{\numberline {2.1.3.29}\setlength {\rightskip }{0pt plus 5cm}void Data::printDataSet (std::ostream \& {\em stream})}{10}{subsubsection.2.1.3.29}
\contentsline {subsubsection}{\numberline {2.1.3.30}\setlength {\rightskip }{0pt plus 5cm}void Data::printClassDist ()}{10}{subsubsection.2.1.3.30}
\contentsline {subsubsection}{\numberline {2.1.3.31}\setlength {\rightskip }{0pt plus 5cm}void Data::printInstance (int {\em inst})}{10}{subsubsection.2.1.3.31}
\contentsline {subsubsection}{\numberline {2.1.3.32}\setlength {\rightskip }{0pt plus 5cm}void Data::printFrequencyTable (std::ostream \& {\em stream})}{10}{subsubsection.2.1.3.32}
\contentsline {subsubsection}{\numberline {2.1.3.33}\setlength {\rightskip }{0pt plus 5cm}void Data::processAttribute (std::string {\em line})\hspace {0.3cm}{\tt \unhbox \voidb@x \hbox {[}protected\unhbox \voidb@x \hbox {]}}}{10}{subsubsection.2.1.3.33}
\contentsline {subsubsection}{\numberline {2.1.3.34}\setlength {\rightskip }{0pt plus 5cm}void Data::processInstance (std::string {\em line})\hspace {0.3cm}{\tt \unhbox \voidb@x \hbox {[}protected\unhbox \voidb@x \hbox {]}}}{10}{subsubsection.2.1.3.34}
\contentsline {subsubsection}{\numberline {2.1.3.35}\setlength {\rightskip }{0pt plus 5cm}std::string Data::preprocessString (std::string {\em line})\hspace {0.3cm}{\tt \unhbox \voidb@x \hbox {[}protected\unhbox \voidb@x \hbox {]}}}{11}{subsubsection.2.1.3.35}
\contentsline {subsubsection}{\numberline {2.1.3.36}\setlength {\rightskip }{0pt plus 5cm}int Data::find (std::string {\em att}, \/ std::vector$<$ std::string $>$ \& {\em l})\hspace {0.3cm}{\tt \unhbox \voidb@x \hbox {[}protected\unhbox \voidb@x \hbox {]}}}{11}{subsubsection.2.1.3.36}
\contentsline {section}{\numberline {2.2}DisjunctionSet Struct Reference}{12}{section.2.2}
\contentsline {subsection}{\numberline {2.2.1}Detailed Description}{12}{subsection.2.2.1}
\contentsline {section}{\numberline {2.3}Rule Class Reference}{13}{section.2.3}
\contentsline {subsection}{\numberline {2.3.1}Detailed Description}{13}{subsection.2.3.1}
\contentsline {subsection}{\numberline {2.3.2}Constructor \& Destructor Documentation}{13}{subsection.2.3.2}
\contentsline {subsubsection}{\numberline {2.3.2.1}\setlength {\rightskip }{0pt plus 5cm}Rule::Rule ()}{13}{subsubsection.2.3.2.1}
\contentsline {subsubsection}{\numberline {2.3.2.2}\setlength {\rightskip }{0pt plus 5cm}Rule::Rule (int {\em attribute}, \/ int {\em value}, \/ {\bf Data} $\ast $ {\em d}, \/ RULE\_\discretionary {-}{}{}TYPE {\em type}, \/ float($\ast $)({\bf Rule} $\ast $) {\em scoreFnc} = {\tt NULL})}{14}{subsubsection.2.3.2.2}
\contentsline {subsubsection}{\numberline {2.3.2.3}\setlength {\rightskip }{0pt plus 5cm}Rule::$\sim $Rule ()}{14}{subsubsection.2.3.2.3}
\contentsline {subsection}{\numberline {2.3.3}Member Function Documentation}{14}{subsection.2.3.3}
\contentsline {subsubsection}{\numberline {2.3.3.1}\setlength {\rightskip }{0pt plus 5cm}void $\ast $ Rule::getComponent ()}{14}{subsubsection.2.3.3.1}
\contentsline {subsubsection}{\numberline {2.3.3.2}\setlength {\rightskip }{0pt plus 5cm}void Rule::setComponent (void $\ast $ {\em com})}{14}{subsubsection.2.3.3.2}
\contentsline {subsubsection}{\numberline {2.3.3.3}\setlength {\rightskip }{0pt plus 5cm}vector$<$ {\bf DisjunctionSet} $\ast $ $>$ $\ast $ Rule::getRuleSet ()}{14}{subsubsection.2.3.3.3}
\contentsline {subsubsection}{\numberline {2.3.3.4}\setlength {\rightskip }{0pt plus 5cm}void Rule::setData ({\bf Data} $\ast $ {\em d})}{14}{subsubsection.2.3.3.4}
\contentsline {subsubsection}{\numberline {2.3.3.5}\setlength {\rightskip }{0pt plus 5cm}void Rule::setWeights (float {\em alpha}, \/ float {\em beta}, \/ float {\em gamma})}{15}{subsubsection.2.3.3.5}
\contentsline {subsubsection}{\numberline {2.3.3.6}\setlength {\rightskip }{0pt plus 5cm}float Rule::getScore ()}{15}{subsubsection.2.3.3.6}
\contentsline {subsubsection}{\numberline {2.3.3.7}\setlength {\rightskip }{0pt plus 5cm}float Rule::getSupport ()}{15}{subsubsection.2.3.3.7}
\contentsline {subsubsection}{\numberline {2.3.3.8}\setlength {\rightskip }{0pt plus 5cm}float Rule::getPD ()}{15}{subsubsection.2.3.3.8}
\contentsline {subsubsection}{\numberline {2.3.3.9}\setlength {\rightskip }{0pt plus 5cm}float Rule::getPF ()}{15}{subsubsection.2.3.3.9}
\contentsline {subsubsection}{\numberline {2.3.3.10}\setlength {\rightskip }{0pt plus 5cm}float Rule::getEffort ()}{15}{subsubsection.2.3.3.10}
\contentsline {subsubsection}{\numberline {2.3.3.11}\setlength {\rightskip }{0pt plus 5cm}int Rule::getSize ()}{16}{subsubsection.2.3.3.11}
\contentsline {subsubsection}{\numberline {2.3.3.12}\setlength {\rightskip }{0pt plus 5cm}{\bf Rule} $\ast $ Rule::clone ()}{16}{subsubsection.2.3.3.12}
\contentsline {subsubsection}{\numberline {2.3.3.13}\setlength {\rightskip }{0pt plus 5cm}bool Rule::createFromFile (std::string {\em fName}, \/ {\bf Data} $\ast $ {\em d}, \/ RULE\_\discretionary {-}{}{}TYPE {\em type}, \/ float($\ast $)({\bf Rule} $\ast $) {\em scoreFcn} = {\tt NULL})}{16}{subsubsection.2.3.3.13}
\contentsline {subsubsection}{\numberline {2.3.3.14}\setlength {\rightskip }{0pt plus 5cm}float Rule::compare ({\bf Rule} $\ast $ {\em r})}{16}{subsubsection.2.3.3.14}
\contentsline {subsubsection}{\numberline {2.3.3.15}\setlength {\rightskip }{0pt plus 5cm}bool Rule::isSatisfied (std::vector$<$ InstanceElement $\ast $ $>$ $\ast $ {\em instance})}{16}{subsubsection.2.3.3.15}
\contentsline {subsubsection}{\numberline {2.3.3.16}\setlength {\rightskip }{0pt plus 5cm}void Rule::score ()}{17}{subsubsection.2.3.3.16}
\contentsline {subsubsection}{\numberline {2.3.3.17}\setlength {\rightskip }{0pt plus 5cm}int Rule::findAttribute (int {\em attribute})}{17}{subsubsection.2.3.3.17}
\contentsline {subsubsection}{\numberline {2.3.3.18}\setlength {\rightskip }{0pt plus 5cm}int Rule::findAttributeValue (int {\em attribute}, \/ int {\em value})}{17}{subsubsection.2.3.3.18}
\contentsline {subsubsection}{\numberline {2.3.3.19}\setlength {\rightskip }{0pt plus 5cm}bool Rule::hasComponent (int {\em attribute}, \/ int {\em value})}{17}{subsubsection.2.3.3.19}
\contentsline {subsubsection}{\numberline {2.3.3.20}\setlength {\rightskip }{0pt plus 5cm}bool Rule::isEqualTo ({\bf Rule} $\ast $ {\em r})}{17}{subsubsection.2.3.3.20}
\contentsline {subsubsection}{\numberline {2.3.3.21}\setlength {\rightskip }{0pt plus 5cm}bool Rule::addComponent (int {\em attribute}, \/ int {\em value})}{18}{subsubsection.2.3.3.21}
\contentsline {subsubsection}{\numberline {2.3.3.22}\setlength {\rightskip }{0pt plus 5cm}{\bf Rule} $\ast $ Rule::combine ({\bf Rule} $\ast $ {\em r})}{18}{subsubsection.2.3.3.22}
\contentsline {subsubsection}{\numberline {2.3.3.23}\setlength {\rightskip }{0pt plus 5cm}{\bf Rule} $\ast $ Rule::backSelect ()}{18}{subsubsection.2.3.3.23}
\contentsline {subsubsection}{\numberline {2.3.3.24}\setlength {\rightskip }{0pt plus 5cm}void Rule::printGotWant (std::ostream \& {\em stream}, \/ {\bf Data} $\ast $ {\em eData})}{18}{subsubsection.2.3.3.24}
\contentsline {subsubsection}{\numberline {2.3.3.25}\setlength {\rightskip }{0pt plus 5cm}void Rule::print (std::ostream \& {\em stream})}{18}{subsubsection.2.3.3.25}
\contentsline {subsubsection}{\numberline {2.3.3.26}\setlength {\rightskip }{0pt plus 5cm}void Rule::printRule (std::ostream \& {\em stream})}{19}{subsubsection.2.3.3.26}
\contentsline {section}{\numberline {2.4}RuleSet Class Reference}{20}{section.2.4}
\contentsline {subsection}{\numberline {2.4.1}Detailed Description}{20}{subsection.2.4.1}
\contentsline {subsection}{\numberline {2.4.2}Constructor \& Destructor Documentation}{20}{subsection.2.4.2}
\contentsline {subsubsection}{\numberline {2.4.2.1}\setlength {\rightskip }{0pt plus 5cm}RuleSet::RuleSet ()}{20}{subsubsection.2.4.2.1}
\contentsline {subsubsection}{\numberline {2.4.2.2}\setlength {\rightskip }{0pt plus 5cm}RuleSet::RuleSet ({\bf Data} $\ast $ {\em train}, \/ {\bf Data} $\ast $ {\em test}, \/ RULE\_\discretionary {-}{}{}TYPE {\em type})}{20}{subsubsection.2.4.2.2}
\contentsline {subsubsection}{\numberline {2.4.2.3}\setlength {\rightskip }{0pt plus 5cm}RuleSet::$\sim $RuleSet ()}{20}{subsubsection.2.4.2.3}
\contentsline {subsection}{\numberline {2.4.3}Member Function Documentation}{20}{subsection.2.4.3}
\contentsline {subsubsection}{\numberline {2.4.3.1}\setlength {\rightskip }{0pt plus 5cm}void RuleSet::create ()}{20}{subsubsection.2.4.3.1}
\contentsline {subsubsection}{\numberline {2.4.3.2}\setlength {\rightskip }{0pt plus 5cm}void RuleSet::score ()}{21}{subsubsection.2.4.3.2}
\contentsline {subsubsection}{\numberline {2.4.3.3}\setlength {\rightskip }{0pt plus 5cm}void RuleSet::print (std::ostream \& {\em stream})}{21}{subsubsection.2.4.3.3}
\contentsline {section}{\numberline {2.5}WhichStack Class Reference}{22}{section.2.5}
\contentsline {subsection}{\numberline {2.5.1}Detailed Description}{22}{subsection.2.5.1}
\contentsline {subsection}{\numberline {2.5.2}Constructor \& Destructor Documentation}{22}{subsection.2.5.2}
\contentsline {subsubsection}{\numberline {2.5.2.1}\setlength {\rightskip }{0pt plus 5cm}WhichStack::WhichStack ()}{22}{subsubsection.2.5.2.1}
\contentsline {subsubsection}{\numberline {2.5.2.2}\setlength {\rightskip }{0pt plus 5cm}WhichStack::WhichStack (int {\em maxSize})}{22}{subsubsection.2.5.2.2}
\contentsline {subsubsection}{\numberline {2.5.2.3}\setlength {\rightskip }{0pt plus 5cm}WhichStack::$\sim $WhichStack ()}{22}{subsubsection.2.5.2.3}
\contentsline {subsection}{\numberline {2.5.3}Member Function Documentation}{23}{subsection.2.5.3}
\contentsline {subsubsection}{\numberline {2.5.3.1}\setlength {\rightskip }{0pt plus 5cm}void WhichStack::create ({\bf Data} $\ast $ {\em data}, \/ int {\em type}, \/ float {\em alpha} = {\tt 1}, \/ float {\em beta} = {\tt 1}, \/ float {\em gamma} = {\tt 1})}{23}{subsubsection.2.5.3.1}
\contentsline {subsubsection}{\numberline {2.5.3.2}\setlength {\rightskip }{0pt plus 5cm}bool WhichStack::push ({\bf Rule} $\ast $ {\em r})}{23}{subsubsection.2.5.3.2}
\contentsline {subsubsection}{\numberline {2.5.3.3}\setlength {\rightskip }{0pt plus 5cm}int WhichStack::select (int {\em count} = {\tt 2000}, \/ int {\em check} = {\tt 200}, \/ float {\em improve} = {\tt 0.2})}{23}{subsubsection.2.5.3.3}
\contentsline {subsubsection}{\numberline {2.5.3.4}\setlength {\rightskip }{0pt plus 5cm}bool WhichStack::pickTwo ()}{23}{subsubsection.2.5.3.4}
\contentsline {subsubsection}{\numberline {2.5.3.5}\setlength {\rightskip }{0pt plus 5cm}unsigned int WhichStack::size ()}{24}{subsubsection.2.5.3.5}
\contentsline {subsubsection}{\numberline {2.5.3.6}\setlength {\rightskip }{0pt plus 5cm}{\bf Rule} $\ast $ WhichStack::getBest ()}{24}{subsubsection.2.5.3.6}
\contentsline {subsubsection}{\numberline {2.5.3.7}\setlength {\rightskip }{0pt plus 5cm}{\bf Rule} $\ast $ WhichStack::getRule (int {\em index})}{24}{subsubsection.2.5.3.7}
\contentsline {subsubsection}{\numberline {2.5.3.8}\setlength {\rightskip }{0pt plus 5cm}std::ostream\& WhichStack::report (std::ostream \& {\em stream}, \/ int {\em n})}{24}{subsubsection.2.5.3.8}
\contentsline {subsubsection}{\numberline {2.5.3.9}\setlength {\rightskip }{0pt plus 5cm}void WhichStack::print (std::ostream \& {\em stream})}{24}{subsubsection.2.5.3.9}
\contentsline {subsubsection}{\numberline {2.5.3.10}\setlength {\rightskip }{0pt plus 5cm}bool WhichStack::push (int\unhbox \voidb@x \hbox {[}$\,$\unhbox \voidb@x \hbox {]} {\em attVal}, \/ float($\ast $)({\bf Rule} $\ast $) {\em scoreFcn})}{25}{subsubsection.2.5.3.10}
\contentsline {subsubsection}{\numberline {2.5.3.11}\setlength {\rightskip }{0pt plus 5cm}bool WhichStack::contains ({\bf Rule} $\ast $ {\em r})\hspace {0.3cm}{\tt \unhbox \voidb@x \hbox {[}protected\unhbox \voidb@x \hbox {]}}}{25}{subsubsection.2.5.3.11}
\contentsline {subsubsection}{\numberline {2.5.3.12}\setlength {\rightskip }{0pt plus 5cm}int WhichStack::pick (std::vector$<$ float $>$ {\em scores}, \/ float {\em sum})\hspace {0.3cm}{\tt \unhbox \voidb@x \hbox {[}protected\unhbox \voidb@x \hbox {]}}}{25}{subsubsection.2.5.3.12}
